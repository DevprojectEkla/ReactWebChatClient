

// Cache name
const CACHE_NAME = 'my-cache-v1';
// List of files to cache
const urlsToCache = [
    '/',
    '/asssets',
    'index.html',
    '/styles.css',
    '/app.js',
    '/icon-192x192.png',
    '/icon-512x512.png'
];

// Install event - caching resources
/* eslint-disable-next-line no-restricted-globals */
self.addEventListener('install', event => {
    event.waitUntil(
        caches.open(CACHE_NAME)
        .then(cache => {
            return cache.addAll(urlsToCache);
        })
    );
});

// Activate event - cleanup old caches
/* eslint-disable-next-line no-restricted-globals */
self.addEventListener('activate', event => {
    const cacheWhitelist = [CACHE_NAME];
    event.waitUntil(
        caches.keys().then(cacheNames => {
            return Promise.all(
                cacheNames.map(cacheName => {
                    if (!cacheWhitelist.includes(cacheName)) {
                        return caches.delete(cacheName);
                    }
                })
            );
        })
    );
});

// Fetch event - serving cached content
/* eslint-disable-next-line no-restricted-globals */
self.addEventListener('fetch', event => {
    event.respondWith(
        caches.match(event.request)
        .then(response => {
            if (response) {
                return response;
            }
            return fetch(event.request);
        })
    );
});

